apps_domain: {{ apps_domain }}
timeout: {{ timeout }}
applications:
- name: application-broker
  env:
    CF_API: http://api.{{ apps_domain }}
    CLIENT_ID: developer_console
    CLIENT_SECRET: {{ developer_console_password }}
    TOKEN_URL: http://uaa.{{ run_domain }}/oauth/token
    AUTH_USER: {{ application_broker_user }}
    AUTH_PASS: {{ application_broker_pass }}
- name: atk
  env:
    CC_URI: api.{{ run_domain }}
    UAA_CLIENT_NAME: {{ atk_client_name }}
    UAA_CLIENT_PASSWORD: {{ atk_client_pass }}
    UAA_URI: uaa.{{ run_domain }}
    KEYTAB_VCAP: {{ vcap_keytab_value }}
    KRB5_BASE64: {{ krb5_base64 }}
- name: scoring-engine
- name: hdfs-broker
  env:
    USER_PASSWORD: {{ hdfs_broker_user_pass }}
    BROKER_PATH: {{ hdfs_broker_folder_on_hdfs }}
    HADOOP_PROVIDED_ZIP: '{{ import_hadoop_conf_hdfs }}'
    SPRING_PROFILES_ACTIVE: cloud,{{ 'secure' if kerberos_host != '' else 'insecure' }}
    HDFS_KEYTAB: {{ hdfs_keytab_value }}
- name: kafka-broker
  memory: 128M
  env:
    CREDENTIALS: '{"uri": "{{ master_node_host_1 }}:9092,{{ master_node_host_2 }}:9092,{{ master_node_host_3 }}:9092"}'
    IMAGE_URL: {{ generic_broker_icon }}
    VERSION: {{ wssb_version }}
- name: metrics-provider
- name: latest-events-service
- name: console
- name: service-catalog
- name: service-exposer
- name: app-launcher-helper
  env:
    API_URL: http://api.{{ run_domain }}
    TOKEN_KEY_URL: http://uaa.{{ run_domain }}/token_key
- name: user-management
- name: platform-operations
- name: model-catalog
- name: platform-context
- name: cdh-broker
  memory: 128M
  env:
    CREDENTIALS: '{"hdfs_root": "hdfs://{{ hdfs_nameservice_for_cdh_broker }}/user/atkuser", "zk_host": "{{ master_node_host_1 }}", "zk_port": "2181", "spark_max_memory": "2163212288", "resource_manager" : "http://{{ namenode_internal_host }}:8088", "yarn_config": "http://{{ cloudera_manager_internal_host }}:7180/api/v9/clusters/{{ CDH_cluster_name }}/services/YARN/clientConfig", "hdfs_config": "http://{{ cloudera_manager_internal_host }}:7180/api/v9/clusters/{{ CDH_cluster_name }}/services/HDFS/clientConfig", "hbase_config": "http://{{ cloudera_manager_internal_host }}:7180/api/v9/clusters/{{ CDH_cluster_name }}/services/HBASE/clientConfig"}'
    VERSION: {{ wssb_version }}
- name: zookeeper-wssb-broker
  memory: 128M
  env:
    CREDENTIALS: '{"uri": "{{ master_node_host_1 }}:2181,{{ master_node_host_2 }}:2181,{{ master_node_host_3 }}:2181"}'
    VERSION: {{ wssb_version }}
- name: smtp-broker
  memory: 128M
  env:
    CREDENTIALS: '{"username": {{ smtp_user }}, "password": {{ smtp_pass }}, "port": "{{ smtp_port }}", "host": "{{ smtp_host }}", "protocol": "{{ smtp_protocol }}"}'
    VERSION: {{ wssb_version }}
- name: gateway
- name: data-catalog
- name: dataset-publisher
- name: router-metrics-provider
- name: das
- name: hbase-broker
  env:
    USER_PASSWORD: {{ hbase_broker_user_pass }}
    KRB_KDC_HOST: "{{ kerberos_host }}"
    KRB_REALM: "{{ kerberos_realm if kerberos_host != '' }}"
    ZK_BRK_SPACE: {{ hbase_broker_znode_in_zookeeper }}
    HADOOP_PROVIDED_ZIP: '{{ import_hadoop_conf_hbase }}'
- name: zookeeper-broker
  env:
    USER_PASSWORD: {{ zookeeper_broker_user_pass }}
    KRB_KDC_HOST: "{{ kerberos_host }}"
    KRB_REALM: "{{ kerberos_realm if kerberos_host != '' }}"
    ZK_CLUSTER_URL: {{ master_node_host_1 }}:2181,{{ master_node_host_2 }}:2181,{{ master_node_host_3 }}:2181
    ZK_BRK_ROOT: {{ zookeeper_broker_metadata }}
    ZK_BRK_STORE: {{ zookeeper_broker_userspace }}
- name: yarn-broker
  env:
    USER_PASSWORD: {{ yarn_broker_user_pass }}
    KRB_KDC_HOST: "{{ kerberos_host }}"
    KRB_REALM: "{{ kerberos_realm if kerberos_host != '' }}"
    HADOOP_PROVIDED_ZIP: '{{ import_hadoop_conf_yarn }}'
    YARNBRK_SPACE: {{ yarn_broker_znode_in_zookeeper }}
- name: hdfs-downloader
  env:
    HDFS_USER: {{ hdfs_username }}
    KERBEROS_USER: "{{ kerberos_username if kerberos_host != '' }}"
    KERBEROS_PASS: "{{ kerberos_password if kerberos_host != '' }}"
    JAVA_OPTS: "{{ java_http_proxy }}"
- name: hdfs-uploader
  env:
    HDFS_USER: {{ hdfs_username }}
    KERBEROS_USER: "{{ kerberos_username if kerberos_host != '' }}"
    KERBEROS_PASS: "{{ kerberos_password if kerberos_host != '' }}"
- name: metadataparser
  env:
    HDFS_USER: {{ hdfs_username }}
    KERBEROS_USER: "{{ kerberos_username if kerberos_host != '' }}"
    KERBEROS_PASS: "{{ kerberos_password if kerberos_host != '' }}"
user_provided_service_instances:
- name: sso
  credentials:
    apiEndpoint: http://api.{{ run_domain }}
    authorizationUri: http://login.{{ run_domain }}/oauth/authorize
    checkTokenUri: http://uaa.{{ run_domain }}/check_token
    clientId: developer_console
    clientSecret: {{ developer_console_password }}
    logoutUri: http://login.{{ run_domain }}/logout.do
    tokenKey: http://uaa.{{ run_domain }}/token_key
    tokenUri: http://uaa.{{ run_domain }}/oauth/token
    uaaUri: http://uaa.{{ run_domain }}
    userInfoUri: http://uaa.{{ run_domain }}/userinfo
    email: {{ email_address }}
- name: nats-provider
  credentials:
    url: nats://{{ nats_username }}:{{ cf_admin_client_password }}@{{ nats_ip }}:4222
    service-creation-subject: {{ nats_service_creation_topic }}
    data-catalog-subject: {{ nats_data_catalog_topic }}
- name: gorouter-provider
  credentials:
    username: {{ router_username }}
    password: {{ cf_admin_client_password }}
- name: service-exposer
  credentials:
    host: http://service-exposer.{{ apps_domain }}
- name: datacatalog
  credentials:
    host: http://data-catalog.{{ apps_domain }}
- name: servicecatalog
  credentials:
    host: http://service-catalog.{{ apps_domain }}
- name: dataaquisitionservice
  credentials:
    host: http://das.{{ apps_domain }}
- name: metrics-provider
  credentials:
    host: http://metrics-provider.{{ apps_domain }}
- name: app-launcher-helper
  credentials:
    host: http://app-launcher-helper.{{ apps_domain }}
- name: user-management
  credentials:
    host: http://user-management.{{ apps_domain }}
- name: platform-operations
  credentials:
    host: http://platform-operations.{{ apps_domain }}
- name: model-catalog
  credentials:
    host: http://model-catalog.{{ apps_domain }}
#- name: hue
#  credentials:
#    hueUrl: http://hue.{{ apps_domain }}/metastore/table
#- name: arcadia
#  credentials:
#    arcadiaUrl: http://arcadia.{{ apps_domain }}/arc/apps/data
- name: datacatalogexport
  credentials:
    host: http://hive.{{ apps_domain }}
- name: hive
  credentials:
    # for systems without Arcadia
    {% if kerberos_host != '' %}
    hiveUrl: jdbc:hive2://{{ namenode_internal_host }}:10000/default;principal=hive/{{ namenode_internal_host }}@CLOUDERA;auth=kerberos
    {% else %}
    hiveUrl: jdbc:hive2://{{ namenode_internal_host }}:10000/
    {% endif %}

    # for systems with Arcadia
    # hiveUrl: jdbc:hive2://{{ any_arcadia_node }}:31050/auth=noSasl
    # for systems with Kerberos
    # hiveUrl: jdbc:hive2://{{ namenode_internal_host }}:10000/default;principal=hive/{{ namenode_internal_host }}@CLOUDERA;auth=kerberos
    hiveUser: hdfs
- name: platformcontext
  credentials:
    host: http://platform-context.{{ apps_domain }}
- name: router-metrics-provider
  credentials:
    host: http://router-metrics-provider.{{ apps_domain }}
- name: metadataparser
  credentials:
    url: http://metadata.{{ apps_domain }}
- name: downloader
  credentials:
    url: http://hdfs-downloader.{{ apps_domain }}
- name: hdfs-uploader
  credentials:
    host: http://hdfs-uploader.{{ apps_domain }}
- name: latest-events-service
  credentials:
    host: http://latest-events-service.{{ apps_domain }}
- name: kerberos-service
  credentials:
    kdc: "{{ kerberos_host }}"
    kpassword: "{{ kerberos_password if kerberos_host != '' }}"
    krealm: "{{ kerberos_realm if kerberos_host != '' }}"
    kuser: "{{ kerberos_username }}"
### TO REMOVE after DPNG-2306 ###############
- name: external-tools
  credentials:
    hue:
      available: "{{ external_tool_hue }}"
      url: "https://hue.{{ apps_domain }}/metastore/table"
      internal_host: "{{ hue_node }}:8888"
    arcadia:
      available: "{{ external_tool_arcadia }}"
      url: placeholder
    rstudio:
      available: "{{ external_tool_rstudio }}"
    h2o:
      available: "{{ external_tool_h2o }}"
    gearpump:
      available: "{{ external_tool_gearpump }}"
#############################################
service_brokers:
- name: docker
  broker_url: http://cf-containers-broker.{{ run_domain }}
  auth_username: {{ docker_broker_user }}
  auth_password: {{ docker_broker_user_pass }}
- name: hdfs
  broker_url: https://hdfs-broker.{{ apps_domain }}
  auth_username: {{ hdfs_broker_user }}
  auth_password: {{ hdfs_broker_user_pass }}  
- name: zookeeper-wssb
  broker_url: http://zookeeper-wssb-broker.{{ apps_domain }}
  auth_username: {{ zookeeper_broker_user }}
  auth_password: {{ zookeeper_broker_user_pass }}
- name: kafka
  broker_url: http://kafka-broker.{{ apps_domain }}
  auth_username: {{ kafka_broker_user }}
  auth_password: {{ kafka_broker_user_pass }}
- name: cdh
  broker_url: http://cdh-broker.{{ apps_domain }}
  auth_username: {{ cdh_broker_user }}
  auth_password: {{ cdh_broker_user_pass }}
- name: smtp
  broker_url: http://smtp-broker.{{ apps_domain }}
  auth_username: {{ smtp_broker_user }}
  auth_password: {{ smtp_broker_user_pass }}
#- name: gearpump
#  broker_url: http://gearpump-broker.{{ apps_domain }}
#  auth_username: {{ gearpump_broker_user }}
#  auth_password: {{ gearpump_broker_user_pass }}
- name: hbase
  broker_url: http://hbase-broker.{{ apps_domain }}
  auth_username: {{ hbase_broker_user }}
  auth_password: {{ hbase_broker_user_pass }}
- name: zookeeper
  broker_url: http://zookeeper-broker.{{ apps_domain }}
  auth_username: {{ zookeeper_broker_user }}
  auth_password: {{ zookeeper_broker_user_pass }}
- name: yarn
  broker_url: http://yarn-broker.{{ apps_domain }}
  auth_username: {{ yarm_broker_user }}
  auth_password: {{ yarn_broker_user_pass }}
